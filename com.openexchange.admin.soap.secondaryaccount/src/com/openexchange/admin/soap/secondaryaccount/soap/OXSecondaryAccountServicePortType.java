package com.openexchange.admin.soap.secondaryaccount.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.openexchange.admin.soap.secondaryaccount.dataobjects.AccountDataUpdate;
import com.openexchange.admin.soap.secondaryaccount.dataobjects.Context;
import com.openexchange.admin.soap.secondaryaccount.dataobjects.Credentials;
import com.openexchange.admin.soap.secondaryaccount.dataobjects.Group;
import com.openexchange.admin.soap.secondaryaccount.dataobjects.User;

/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-06-01T18:46:00.766+02:00
 * Generated source version: 2.6.0
 *
 */
@WebService(targetNamespace = "http://soap.admin.openexchange.com", name = "OXSecondaryAccountServicePortType")
@XmlSeeAlso({com.openexchange.admin.soap.secondaryaccount.exceptions.ObjectFactory.class, com.openexchange.admin.soap.secondaryaccount.dataobjects.ObjectFactory.class, com.openexchange.admin.soap.secondaryaccount.rmi.ObjectFactory.class, com.openexchange.admin.soap.secondaryaccount.io.ObjectFactory.class, ObjectFactory.class})
public interface OXSecondaryAccountServicePortType {

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @Action(input = "urn:create", output = "urn:createResponse", fault = {@FaultAction(className = RemoteException_Exception.class, value = "urn:createRemoteException"), @FaultAction(className = StorageException_Exception.class, value = "urn:createStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:createInvalidCredentialsException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:createNoSuchContextException"), @FaultAction(className = NoSuchUserException_Exception.class, value = "urn:createNoSuchUserException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:createInvalidDataException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:createDatabaseUpdateException")})
    @WebMethod(action = "urn:create")
    public void create(
        @WebParam(partName = "parameters", name = "create", targetNamespace = "http://soap.admin.openexchange.com") Create parameters
    ) throws RemoteException_Exception, StorageException_Exception, InvalidCredentialsException_Exception, NoSuchContextException_Exception, NoSuchUserException_Exception, InvalidDataException_Exception, DatabaseUpdateException_Exception;

    // -------------------------------------------------------------------------------------------------------------------------------------

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:update", output = "urn:updateResponse", fault = {@FaultAction(className = RemoteException_Exception.class, value = "urn:updateRemoteException"), @FaultAction(className = StorageException_Exception.class, value = "urn:updateStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:updateInvalidCredentialsException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:updateNoSuchContextException"), @FaultAction(className = NoSuchUserException_Exception.class, value = "urn:updateNoSuchUserException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:updateInvalidDataException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:updateDatabaseUpdateException")})
    @RequestWrapper(localName = "update", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.secondaryaccount.soap.Update")
    @WebMethod(action = "urn:update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.secondaryaccount.soap.UpdateResponse")
    public java.lang.Boolean update(
        @WebParam(name = "primaryAddress", targetNamespace = "http://soap.admin.openexchange.com")
        String primaryAddress,
        @WebParam(name = "accountDataUpdate", targetNamespace = "http://soap.admin.openexchange.com")
        AccountDataUpdate accountDataUpdate,
        @WebParam(name = "context", targetNamespace = "http://soap.admin.openexchange.com")
        Context context,
        @WebParam(name = "users", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<User> users,
        @WebParam(name = "groups", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<Group> groups,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        Credentials auth
    ) throws RemoteException_Exception, StorageException_Exception, InvalidCredentialsException_Exception, NoSuchContextException_Exception, NoSuchUserException_Exception, InvalidDataException_Exception, DatabaseUpdateException_Exception;

    // -------------------------------------------------------------------------------------------------------------------------------------

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:delete", output = "urn:deleteResponse", fault = {@FaultAction(className = RemoteException_Exception.class, value = "urn:deleteRemoteException"), @FaultAction(className = StorageException_Exception.class, value = "urn:deleteStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:deleteInvalidCredentialsException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:deleteNoSuchContextException"), @FaultAction(className = NoSuchUserException_Exception.class, value = "urn:deleteNoSuchUserException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:deleteInvalidDataException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:deleteDatabaseUpdateException")})
    @RequestWrapper(localName = "delete", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.secondaryaccount.soap.Delete")
    @WebMethod(action = "urn:delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.secondaryaccount.soap.DeleteResponse")
    public java.lang.Boolean delete(
        @WebParam(name = "primaryAddress", targetNamespace = "http://soap.admin.openexchange.com")
        String primaryAddress,
        @WebParam(name = "context", targetNamespace = "http://soap.admin.openexchange.com")
        Context context,
        @WebParam(name = "users", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<User> users,
        @WebParam(name = "groups", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<Group> groups,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        Credentials auth
    ) throws RemoteException_Exception, StorageException_Exception, InvalidCredentialsException_Exception, NoSuchContextException_Exception, NoSuchUserException_Exception, InvalidDataException_Exception, DatabaseUpdateException_Exception;

    // -------------------------------------------------------------------------------------------------------------------------------------

    @WebResult(name = "return", targetNamespace = "http://soap.admin.openexchange.com")
    @Action(input = "urn:list", output = "urn:listResponse", fault = {@FaultAction(className = RemoteException_Exception.class, value = "urn:listRemoteException"), @FaultAction(className = StorageException_Exception.class, value = "urn:listStorageException"), @FaultAction(className = InvalidCredentialsException_Exception.class, value = "urn:listInvalidCredentialsException"), @FaultAction(className = NoSuchContextException_Exception.class, value = "urn:listNoSuchContextException"), @FaultAction(className = NoSuchUserException_Exception.class, value = "urn:listNoSuchUserException"), @FaultAction(className = InvalidDataException_Exception.class, value = "urn:listInvalidDataException"), @FaultAction(className = DatabaseUpdateException_Exception.class, value = "urn:listDatabaseUpdateException")})
    @RequestWrapper(localName = "list", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.secondaryaccount.soap.List")
    @WebMethod(action = "urn:list")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://soap.admin.openexchange.com", className = "com.openexchange.admin.soap.secondaryaccount.soap.ListResponse")
    public java.util.List<com.openexchange.admin.soap.secondaryaccount.dataobjects.Account> list(
        @WebParam(name = "context", targetNamespace = "http://soap.admin.openexchange.com")
        Context context,
        @WebParam(name = "users", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<User> users,
        @WebParam(name = "groups", targetNamespace = "http://soap.admin.openexchange.com")
        java.util.List<Group> groups,
        @WebParam(name = "auth", targetNamespace = "http://soap.admin.openexchange.com")
        Credentials auth
    ) throws RemoteException_Exception, StorageException_Exception, InvalidCredentialsException_Exception, NoSuchContextException_Exception, NoSuchUserException_Exception, InvalidDataException_Exception, DatabaseUpdateException_Exception;

}
